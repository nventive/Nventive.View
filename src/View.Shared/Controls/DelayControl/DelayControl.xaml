<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:xamarin="http://uno.ui/xamarin"
					xmlns:android="http://uno.ui/android"
					xmlns:ios="http://uno.ui/ios"
					xmlns:u="using:Nventive.View.Controls"
					xmlns:uloc="http://nventive.com/localization/1.0"
					xmlns:ub="using:Nventive.View.Extensions"
					mc:Ignorable="d xamarin android ios uloc">

	<!-- This one is for things that should be visible by default. It has a fade in animation. -->
	<Style x:Key="DefaultDelayControlStyle"
		   TargetType="u:DelayControl">
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="DelayAfterDataContext"
				Value="0:0:0.1" />
		<Setter Property="WaitForInnerView"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="u:DelayControl">
					<Grid x:Name="RootGrid"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="WaitingStates">
								<VisualState x:Name="Ready">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Waiting" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<ContentPresenter x:Name="PART_ContentPresenter"
										  Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- This one is to resolve flicker caused by data context changes. It has a loading and fade in animation. -->
	<Style x:Key="LoadingWithFadeDelayControlStyle"
		   TargetType="u:DelayControl">
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="DelayAfterDataContext"
				Value="0:0:1.5" />
		<Setter Property="WaitForInnerView"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="u:DelayControl">
					<Grid x:Name="RootGrid"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="WaitingStates">
								<VisualState x:Name="Ready">
									<VisualState.Setters>
										<Setter Target="ProgressRing.IsActive"
												Value="False" />
										<Setter Target="ProgressRing.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="0:0:0.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Waiting" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<ProgressRing x:Name="ProgressRing"
									  Width="20"
									  Height="20"
									  IsActive="True"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Foreground="{StaticResource Color12Brush}" />

						<ContentPresenter x:Name="PART_ContentPresenter"
										  Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- This one is for things that are not visible by default (hidden behind visual states). There are not animations. -->
	<Style x:Key="BackgroundDelayControlStyle"
		   TargetType="u:DelayControl">
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="DelayAfterDataContext"
				Value="0:0:1" />
		<Setter Property="WaitForInnerView"
				Value="True" />
		<Setter Property="ApplyTemplatePriority"
				Value="Low" />
		<Setter Property="InnerViewPriority"
				Value="Low" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="u:DelayControl">
					<Grid x:Name="RootGrid"
						  VerticalAlignment="{TemplateBinding VerticalAlignment}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="WaitingStates">
								<VisualState x:Name="Ready" />
								<VisualState x:Name="Waiting" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<ContentPresenter x:Name="PART_ContentPresenter" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="u:DelayControl"
		   BasedOn="{StaticResource DefaultDelayControlStyle}" />

</ResourceDictionary>
